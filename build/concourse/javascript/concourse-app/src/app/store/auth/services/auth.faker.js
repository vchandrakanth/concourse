"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const TOKEN_HEADER = 'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9';
// tslint:disable-next-line:max-line-length
const TOKEN_SIGNATURE = '.OcUTLMkS8DnYZr8-TLnO-myxZuuNlLRHvD7JDReCLp3l4hbkR48ZR2ELCkWjNOXl5Cby9h3yViaGKoUQQKVDFzOYMrsxweyGEj0nsZPF0uInE00PCnW2S6b_cETT6vZQpN6JRa9fUoARV-JRotmeQH-eFUX4LwvZ51RBuNvoFIacc9_Y85miqRJm0ri_gReS5-o5qSa5Y4hTm2Hm2Rh6y7aZHmjqYTwTc5jkGScfL1mwD6l5s2yn4D3z82l7tmWs_8n_4skPRbDOgIEdN-yaggQBV9sWm1aU6wx-IZQl-qH_0K82l64nSjCV1_CjppqWAeE-cBUzX7qY4yqVHIPlMA';
const aud = [
    'user-api-service',
    'model-api-service',
    'workflow-api-service',
    'institution-api-service'
];
const scope = [
    'MANAGE_GROUPS',
    'MANAGE_USERS',
    'MANAGE_ROLES',
    'MANAGE_INSTITUTIONS',
    'MANAGE_SERVICE_MODELS',
    'MANAGE_SERVICES',
    'MANAGE_APPLICATIONS',
    'MANAGE_SURFACE_LAYERS'
];
const EXTRA = {
    institutionId: 1001,
    userId: undefined,
    groupIds: []
};
const ACCESS_TOKEN_DATA = {
    aud,
    authorities: [],
    client_id: 'MOCK-CLIENT-ID.api.concoursehub.com',
    exp: 1544753568,
    scope,
    user_name: 'bob@concoursehub.com'
};
const REFRESH_TOKEN_DATA = {
    aud,
    client_id: 'MOCK-CLIENT-ID.api.concoursehub.com',
    exp: 1547145937,
    scope,
    user_name: 'bob@concoursehub.com'
};
const encodeJWTToken = (tokenObject) => decodeURIComponent(btoa(JSON.stringify(tokenObject)).replace(/(.)/g, (_m, p) => {
    const code = p.charCodeAt(0).toString(16).toUpperCase();
    return code.length < 2 ? `0${code}` : `%${code}`;
}));
exports.fakeToken = (tokenData) => `${TOKEN_HEADER}.${encodeJWTToken(tokenData)}.${TOKEN_SIGNATURE}`;
exports.fakeTokenResponse = (accessExpireDate, refreshExpireDate, extra) => {
    extra = Object.assign(Object.assign({}, EXTRA), extra);
    const accessTokenData = Object.assign(Object.assign({}, ACCESS_TOKEN_DATA), { extra, exp: accessExpireDate });
    const refreshTokenData = Object.assign(Object.assign({}, REFRESH_TOKEN_DATA), { extra, exp: refreshExpireDate });
    return {
        access_token: exports.fakeToken(accessTokenData),
        token_type: 'bearer',
        refresh_token: exports.fakeToken(refreshTokenData),
        expires_in: 1,
        scope: '',
        extra,
        jti: '9d97b831-2c1f-4baa-bd4d-dded173b3eb2'
    };
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXV0aC5mYWtlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL2NvbmNvdXJzZS9qYXZhc2NyaXB0L2NvbmNvdXJzZS1hcHAvc3JjL2FwcC9zdG9yZS9hdXRoL3NlcnZpY2VzL2F1dGguZmFrZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxNQUFNLFlBQVksR0FBRyxzQ0FBc0MsQ0FBQztBQUM1RCwyQ0FBMkM7QUFDM0MsTUFBTSxlQUFlLEdBQUcseVZBQXlWLENBQUM7QUFFbFgsTUFBTSxHQUFHLEdBQUc7SUFDVixrQkFBa0I7SUFDbEIsbUJBQW1CO0lBQ25CLHNCQUFzQjtJQUN0Qix5QkFBeUI7Q0FDMUIsQ0FBQztBQUNGLE1BQU0sS0FBSyxHQUFHO0lBQ1osZUFBZTtJQUNmLGNBQWM7SUFDZCxjQUFjO0lBQ2QscUJBQXFCO0lBQ3JCLHVCQUF1QjtJQUN2QixpQkFBaUI7SUFDakIscUJBQXFCO0lBQ3JCLHVCQUF1QjtDQUN4QixDQUFDO0FBQ0YsTUFBTSxLQUFLLEdBQUc7SUFDWixhQUFhLEVBQUUsSUFBSTtJQUNuQixNQUFNLEVBQUUsU0FBUztJQUNqQixRQUFRLEVBQUUsRUFBRTtDQUNiLENBQUM7QUFFRixNQUFNLGlCQUFpQixHQUFHO0lBQ3hCLEdBQUc7SUFDSCxXQUFXLEVBQUUsRUFBRTtJQUNmLFNBQVMsRUFBRSxxQ0FBcUM7SUFDaEQsR0FBRyxFQUFFLFVBQVU7SUFDZixLQUFLO0lBQ0wsU0FBUyxFQUFFLHNCQUFzQjtDQUNsQyxDQUFDO0FBQ0YsTUFBTSxrQkFBa0IsR0FBRztJQUN6QixHQUFHO0lBQ0gsU0FBUyxFQUFFLHFDQUFxQztJQUNoRCxHQUFHLEVBQUUsVUFBVTtJQUNmLEtBQUs7SUFDTCxTQUFTLEVBQUUsc0JBQXNCO0NBQ2xDLENBQUM7QUFFRixNQUFNLGNBQWMsR0FBRyxDQUFDLFdBQW1CLEVBQVUsRUFBRSxDQUNyRCxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUU7SUFDN0UsTUFBTSxJQUFJLEdBQUcsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLENBQUMsV0FBVyxFQUFFLENBQUM7SUFDeEQsT0FBTyxJQUFJLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxJQUFJLEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxJQUFJLEVBQUUsQ0FBQztBQUNuRCxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBRU8sUUFBQSxTQUFTLEdBQUcsQ0FBQyxTQUFpQixFQUFVLEVBQUUsQ0FDckQsR0FBRyxZQUFZLElBQUksY0FBYyxDQUFDLFNBQVMsQ0FBQyxJQUFJLGVBQWUsRUFBRSxDQUFDO0FBRXZELFFBQUEsaUJBQWlCLEdBQUcsQ0FBQyxnQkFBd0IsRUFBRSxpQkFBeUIsRUFBRSxLQUFhLEVBQU8sRUFBRTtJQUMzRyxLQUFLLG1DQUFRLEtBQUssR0FBSyxLQUFLLENBQUUsQ0FBQztJQUMvQixNQUFNLGVBQWUsbUNBQ2hCLGlCQUFpQixLQUNwQixLQUFLLEVBQ0wsR0FBRyxFQUFFLGdCQUFnQixHQUN0QixDQUFDO0lBQ0YsTUFBTSxnQkFBZ0IsbUNBQ2pCLGtCQUFrQixLQUNyQixLQUFLLEVBQ0wsR0FBRyxFQUFFLGlCQUFpQixHQUN2QixDQUFDO0lBRUYsT0FBTztRQUNMLFlBQVksRUFBRSxpQkFBUyxDQUFDLGVBQWUsQ0FBQztRQUN4QyxVQUFVLEVBQUUsUUFBUTtRQUNwQixhQUFhLEVBQUUsaUJBQVMsQ0FBQyxnQkFBZ0IsQ0FBQztRQUMxQyxVQUFVLEVBQUUsQ0FBQztRQUNiLEtBQUssRUFBRSxFQUFFO1FBQ1QsS0FBSztRQUNMLEdBQUcsRUFBRSxzQ0FBc0M7S0FDNUMsQ0FBQztBQUNKLENBQUMsQ0FBQyJ9