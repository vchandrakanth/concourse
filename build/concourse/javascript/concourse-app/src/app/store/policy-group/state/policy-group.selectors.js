"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const store_1 = require("@ngrx/store");
const enums_1 = require("@concourse/shared/enums");
const fromPolicyGroup = require("./policy-group.reducer");
exports.getState = store_1.createFeatureSelector(enums_1.StoreNames.PolicyGroup);
exports.getAll = store_1.createSelector(exports.getState, fromPolicyGroup.selectAll);
exports.getEntities = store_1.createSelector(exports.getState, fromPolicyGroup.selectEntities);
exports.getIsLoaded = store_1.createSelector(exports.getState, fromPolicyGroup.isLoaded);
exports.getSelectedId = store_1.createSelector(exports.getState, fromPolicyGroup.selectedPolicyGroupId);
exports.getSelected = store_1.createSelector(exports.getEntities, exports.getSelectedId, (entities, id) => entities[id]);
exports.getSelectedLineage = store_1.createSelector(exports.getAll, exports.getSelected, (policyGroups, selected) => {
    if (!selected) {
        return;
    }
    return policyGroups.filter(pg => pg.lineageId === selected.lineageId);
});
// tslint:disable-next-line:max-line-length
exports.getSelectedWithLineage = store_1.createSelector(exports.getSelected, exports.getSelectedLineage, (selected, lineage) => !!selected ? selected.copyWith({ lineage }) : undefined);
exports.getIsUpdating = store_1.createSelector(exports.getState, fromPolicyGroup.isUpdating);
exports.getMyScopePoliciesByStatus = store_1.createSelector(exports.getState, fromPolicyGroup.selectedPolicyGroupStatus);
exports.getAllMyScopePoliciesByStatus = store_1.createSelector(exports.getEntities, exports.getMyScopePoliciesByStatus, (entities, status) => entities[status]);
exports.getSurfaceLayerPoliciesByStatus = store_1.createSelector(exports.getState, fromPolicyGroup.selectedPolicyGroupStatus, fromPolicyGroup.selectedPolicyGroupSurfaceLayerId);
exports.getAllSurfaceLayerPoliciesByStatus = store_1.createSelector(exports.getEntities, exports.getSurfaceLayerPoliciesByStatus, (entities, status) => entities[status]);
exports.hasNextLink = store_1.createSelector(exports.getState, fromPolicyGroup.hasNextLink);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9saWN5LWdyb3VwLnNlbGVjdG9ycy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL2NvbmNvdXJzZS9qYXZhc2NyaXB0L2NvbmNvdXJzZS1hcHAvc3JjL2FwcC9zdG9yZS9wb2xpY3ktZ3JvdXAvc3RhdGUvcG9saWN5LWdyb3VwLnNlbGVjdG9ycy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHVDQUFvRTtBQUVwRSxtREFBcUQ7QUFDckQsMERBQTBEO0FBRTdDLFFBQUEsUUFBUSxHQUFHLDZCQUFxQixDQUF3QixrQkFBVSxDQUFDLFdBQVcsQ0FBQyxDQUFDO0FBQ2hGLFFBQUEsTUFBTSxHQUFHLHNCQUFjLENBQUMsZ0JBQVEsRUFBRSxlQUFlLENBQUMsU0FBUyxDQUFDLENBQUM7QUFDN0QsUUFBQSxXQUFXLEdBQUcsc0JBQWMsQ0FBQyxnQkFBUSxFQUFFLGVBQWUsQ0FBQyxjQUFjLENBQUMsQ0FBQztBQUN2RSxRQUFBLFdBQVcsR0FBRyxzQkFBYyxDQUFDLGdCQUFRLEVBQUUsZUFBZSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0FBQ2pFLFFBQUEsYUFBYSxHQUFHLHNCQUFjLENBQUMsZ0JBQVEsRUFBRSxlQUFlLENBQUMscUJBQXFCLENBQUMsQ0FBQztBQUNoRixRQUFBLFdBQVcsR0FBRyxzQkFBYyxDQUFDLG1CQUFXLEVBQUUscUJBQWEsRUFBRSxDQUFDLFFBQVEsRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO0FBQ3pGLFFBQUEsa0JBQWtCLEdBQUcsc0JBQWMsQ0FBQyxjQUFNLEVBQUUsbUJBQVcsRUFBRSxDQUFDLFlBQVksRUFBRSxRQUFRLEVBQUUsRUFBRTtJQUMvRixJQUFJLENBQUMsUUFBUSxFQUFFO1FBQUUsT0FBTztLQUFFO0lBQzFCLE9BQU8sWUFBWSxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxTQUFTLEtBQUssUUFBUSxDQUFDLFNBQVMsQ0FBQyxDQUFDO0FBQ3hFLENBQUMsQ0FBQyxDQUFDO0FBQ0gsMkNBQTJDO0FBQzlCLFFBQUEsc0JBQXNCLEdBQUcsc0JBQWMsQ0FBQyxtQkFBVyxFQUFFLDBCQUFrQixFQUFFLENBQUMsUUFBUSxFQUFFLE9BQU8sRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxFQUFFLE9BQU8sRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUFDO0FBRXpKLFFBQUEsYUFBYSxHQUFHLHNCQUFjLENBQUMsZ0JBQVEsRUFBRSxlQUFlLENBQUMsVUFBVSxDQUFDLENBQUM7QUFFckUsUUFBQSwwQkFBMEIsR0FDckMsc0JBQWMsQ0FBQyxnQkFBUSxFQUFFLGVBQWUsQ0FBQyx5QkFBeUIsQ0FBQyxDQUFDO0FBQ3pELFFBQUEsNkJBQTZCLEdBQ3hDLHNCQUFjLENBQUMsbUJBQVcsRUFBRSxrQ0FBMEIsRUFBRSxDQUFDLFFBQVEsRUFBRSxNQUFNLEVBQUUsRUFBRSxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO0FBRXJGLFFBQUEsK0JBQStCLEdBQzFDLHNCQUFjLENBQUMsZ0JBQVEsRUFBRSxlQUFlLENBQUMseUJBQXlCLEVBQUUsZUFBZSxDQUFDLGlDQUFpQyxDQUFDLENBQUM7QUFDNUcsUUFBQSxrQ0FBa0MsR0FDN0Msc0JBQWMsQ0FBQyxtQkFBVyxFQUFFLHVDQUErQixFQUFFLENBQUMsUUFBUSxFQUFFLE1BQU0sRUFBRSxFQUFFLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7QUFDMUYsUUFBQSxXQUFXLEdBQUcsc0JBQWMsQ0FBQyxnQkFBUSxFQUFFLGVBQWUsQ0FBQyxXQUFXLENBQUMsQ0FBQyJ9