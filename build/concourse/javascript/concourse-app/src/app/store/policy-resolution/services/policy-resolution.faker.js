"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const models_1 = require("@concourse/core/models");
const faker = require("faker/locale/en_US");
const RESOLUTION_STATUS = ['CREATED', 'OPEN', 'ASSIGNED', 'UNASSIGNED', 'RESOLVED', 'VERIFIED', 'CANCELLED'];
const RESOLUTION_ACTIONS = ['REOPEN', 'ASSIGN', 'UNASSIGN', 'RESOLVE', 'CANCEL', 'COMMENT'];
const POLICY_VIOLATION_TYPE = ['CREATE', 'UPDATE', 'DELETE'];
const PRIORITY = ['UNSPECIFIED', 'HIGH', 'MEDIUM', 'LOW'];
const ENTITY_TYPE = ['APPLICATION', 'POLICY_GROUP', 'DEPLOYMENT', 'MODEL'];
const createAction = (id, groupIds, userIds, resolutionRequestId) => {
    const createdBy = faker.random.arrayElement(userIds);
    return new models_1.ResolutionAction().deserialize({
        created: faker.date.past(),
        updated: faker.date.recent(2),
        version: faker.random.number(5),
        id,
        comment: faker.lorem.sentences(faker.random.number({ min: 1, max: 3 })),
        type: faker.random.arrayElement(RESOLUTION_ACTIONS),
        assignedGroupId: faker.random.arrayElement(groupIds),
        assignedUserId: faker.random.arrayElement(userIds),
        resolutionRequest: resolutionRequestId,
        createdBy,
        updatedBy: createdBy
    });
};
exports.fakeOne = (surfaceLayerId, policyGroupId, users, i = 0) => {
    const resolutionRequestId = i + 3000;
    const userIds = users.map(u => u.id);
    const actions = [];
    for (let index = 0; index < faker.random.number(8); index++) {
        actions.push(createAction((i * index) + 20001, [0], userIds, resolutionRequestId));
    }
    return new models_1.PolicyResolution().deserialize({
        id: resolutionRequestId,
        actions,
        agedPriority: faker.random.arrayElement(PRIORITY),
        assigneeId: faker.random.arrayElement(userIds),
        cancelledDate: faker.date.past(),
        created: faker.date.past(),
        daysOfAge: faker.random.number(2),
        deploymentId: 1001,
        deploymentName: '',
        eventRequestType: faker.random.arrayElement(POLICY_VIOLATION_TYPE),
        institutionId: 1001,
        modelId: faker.random.number(5),
        modelLineageId: 0,
        modelName: '',
        surfaceLayerId,
        policyGroupId,
        policyViolationId: faker.random.number(5),
        policyViolationType: faker.random.arrayElement(ENTITY_TYPE),
        priority: faker.random.arrayElement(PRIORITY),
        processInstanceId: faker.random.number(10),
        reason: faker.lorem.sentences(2),
        requesterId: faker.random.arrayElement(userIds),
        resolutionGroups: [1001, 1002],
        resolutionRequestId,
        resolvedDate: faker.date.past(),
        status: faker.random.arrayElement(RESOLUTION_STATUS),
        updated: faker.date.past(),
        verifiedDate: faker.date.past(),
        version: faker.random.number(5)
    });
};
exports.fakeMany = (surfaceLayers, policyGroups, user) => Array(faker.random.number({ min: 1, max: 20 })).fill(undefined).map((a, i) => {
    const surfaceLayerId = faker.random.arrayElement(surfaceLayers).id;
    const policyGroupId = faker.random.arrayElement(policyGroups).id;
    return exports.fakeOne(surfaceLayerId, policyGroupId, user, i);
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9saWN5LXJlc29sdXRpb24uZmFrZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9jb25jb3Vyc2UvamF2YXNjcmlwdC9jb25jb3Vyc2UtYXBwL3NyYy9hcHAvc3RvcmUvcG9saWN5LXJlc29sdXRpb24vc2VydmljZXMvcG9saWN5LXJlc29sdXRpb24uZmFrZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxtREFXZ0M7QUFDaEMsNENBQTRDO0FBRTVDLE1BQU0saUJBQWlCLEdBQXVCLENBQUMsU0FBUyxFQUFFLE1BQU0sRUFBRSxVQUFVLEVBQUUsWUFBWSxFQUFFLFVBQVUsRUFBRSxVQUFVLEVBQUUsV0FBVyxDQUFDLENBQUM7QUFDakksTUFBTSxrQkFBa0IsR0FBMkIsQ0FBQyxRQUFRLEVBQUUsUUFBUSxFQUFFLFVBQVUsRUFBRSxTQUFTLEVBQUUsUUFBUSxFQUFFLFNBQVMsQ0FBQyxDQUFDO0FBQ3BILE1BQU0scUJBQXFCLEdBQXVCLENBQUMsUUFBUSxFQUFFLFFBQVEsRUFBRSxRQUFRLENBQUMsQ0FBQztBQUNqRixNQUFNLFFBQVEsR0FBZSxDQUFDLGFBQWEsRUFBRSxNQUFNLEVBQUUsUUFBUSxFQUFFLEtBQUssQ0FBQyxDQUFDO0FBQ3RFLE1BQU0sV0FBVyxHQUFpQixDQUFDLGFBQWEsRUFBRSxjQUFjLEVBQUUsWUFBWSxFQUFFLE9BQU8sQ0FBQyxDQUFDO0FBRXpGLE1BQU0sWUFBWSxHQUFHLENBQUMsRUFBVSxFQUFFLFFBQWtCLEVBQUUsT0FBaUIsRUFBRSxtQkFBMkIsRUFBb0IsRUFBRTtJQUN4SCxNQUFNLFNBQVMsR0FBRyxLQUFLLENBQUMsTUFBTSxDQUFDLFlBQVksQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUNyRCxPQUFPLElBQUkseUJBQWdCLEVBQUUsQ0FBQyxXQUFXLENBQ3ZDO1FBQ0UsT0FBTyxFQUFFLEtBQUssQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFO1FBQzFC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