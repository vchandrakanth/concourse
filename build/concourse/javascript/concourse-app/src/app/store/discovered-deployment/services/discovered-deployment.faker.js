"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const faker = require("faker/locale/en_US");
const models_1 = require("@concourse/core/models");
const STACK_STATUS = [
    'CREATE_IN_PROGRESS',
    'CREATE_FAILED',
    'CREATE_COMPLETE',
    'ROLLBACK_IN_PROGRESS',
    'ROLLBACK_FAILED',
    'ROLLBACK_COMPLETE',
    'DELETE_IN_PROGRESS',
    'DELETE_FAILED',
    'DELETE_COMPLETE',
    'UPDATE_IN_PROGRESS',
    'UPDATE_COMPLETE_CLEANUP_IN_PROGRESS',
    'UPDATE_COMPLETE',
    'UPDATE_ROLLBACK_IN_PROGRESS',
    'UPDATE_ROLLBACK_FAILED',
    'UPDATE_ROLLBACK_COMPLETE_CLEANUP_IN_PROGRESS',
    'UPDATE_ROLLBACK_COMPLETE',
    'REVIEW_IN_PROGRESS'
];
const DRIFT_STATUS = ['DRIFTED', 'IN_SYNC', 'UNKNOWN', 'NOT_CHECKED'];
exports.fakeOne = (model, logicalDeployment, i = 0) => {
    const id = i + 10001;
    return new models_1.DiscoveredDeployment().deserialize({
        id,
        institutionId: 1001,
        stackId: id + 1,
        modelId: model.id,
        logicalDeploymentId: logicalDeployment.id,
        stackName: faker.name.jobArea(),
        stackStatus: faker.random.arrayElement(STACK_STATUS),
        stackStatusReason: faker.lorem.words(15),
        lastUpdatedTime: faker.date.recent(3),
        createdTime: faker.date.past(),
        deletedTime: faker.date.past(),
        driftStatus: faker.random.arrayElement(DRIFT_STATUS),
        lastDriftCheckTime: faker.date.recent(3),
        objectHash: faker.lorem.words(15),
        cloudFormationTemplate: faker.lorem.words(15),
        nestedTemplates: [faker.lorem.words(15), faker.lorem.words(20)],
        templateDescription: faker.lorem.words(15)
    });
};
exports.fakeMany = (enclaves, logicalDeployments, count = faker.random.number({ min: 2, max: 50 })) => {
    const discoveredDeployments = [];
    for (let i = 0; i < count; i++) {
        const logicalDeployment = faker.random.arrayElement(logicalDeployments);
        const model = faker.random.arrayElement(enclaves);
        discoveredDeployments.push(exports.fakeOne(model, logicalDeployment, i));
    }
    return discoveredDeployments;
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGlzY292ZXJlZC1kZXBsb3ltZW50LmZha2VyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vY29uY291cnNlL2phdmFzY3JpcHQvY29uY291cnNlLWFwcC9zcmMvYXBwL3N0b3JlL2Rpc2NvdmVyZWQtZGVwbG95bWVudC9zZXJ2aWNlcy9kaXNjb3ZlcmVkLWRlcGxveW1lbnQuZmFrZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSw0Q0FBNEM7QUFFNUMsbURBTWdDO0FBRWhDLE1BQU0sWUFBWSxHQUFrQjtJQUNsQyxvQkFBb0I7SUFDcEIsZUFBZTtJQUNmLGlCQUFpQjtJQUNqQixzQkFBc0I7SUFDdEIsaUJBQWlCO0lBQ2pCLG1CQUFtQjtJQUNuQixvQkFBb0I7SUFDcEIsZUFBZTtJQUNmLGlCQUFpQjtJQUNqQixvQkFBb0I7SUFDcEIscUNBQXFDO0lBQ3JDLGlCQUFpQjtJQUNqQiw2QkFBNkI7SUFDN0Isd0JBQXdCO0lBQ3hCLDhDQUE4QztJQUM5QywwQkFBMEI7SUFDMUIsb0JBQW9CO0NBQ3JCLENBQUM7QUFDRixNQUFNLFlBQVksR0FBa0IsQ0FBQyxTQUFTLEVBQUUsU0FBUyxFQUFFLFNBQVMsRUFBRSxhQUFhLENBQUMsQ0FBQztBQUV4RSxRQUFBLE9BQU8sR0FBRyxDQUFDLEtBQWMsRUFBRSxpQkFBb0MsRUFBRSxDQUFDLEdBQUcsQ0FBQyxFQUF3QixFQUFFO0lBQzNHLE1BQU0sRUFBRSxHQUFHLENBQUMsR0FBRyxLQUFLLENBQUM7SUFDckIsT0FBTyxJQUFJLDZCQUFvQixFQUFFLENBQUMsV0FBVyxDQUFDO1FBQzVDLEVBQUU7UUFDRixhQUFhLEVBQUUsSUFBSTtRQUNuQixPQUFPLEVBQUUsRUFBRSxHQUFHLENBQUM7UUFDZixPQUFPLEVBQUUsS0FBSyxDQUFDLEVBQUU7UUFDakIsbUJBQW1CLEVBQUUsaUJBQWlCLENBQUMsRUFBRTtRQUN6QyxTQUFTLEVBQUUsS0FBSyxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUU7UUFDL0IsV0FBVyxFQUFFLEtBQUssQ0FBQyxNQUFNLENBQUMsWUFBWSxDQUFDLFlBQVksQ0FBQztRQUNwRCxpQkFBaUIsRUFBRSxLQUFLLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUM7UUFDeEMsZUFBZSxFQUFFLEtBQUssQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztRQUNyQyxXQUFXLEVBQUUsS0FBSyxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUU7UUFDOUIsV0FBVyxFQUFFLEtBQUssQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFO1FBQzlCLFdBQVcsRUFBRSxLQUFLLENBQUMsTUFBTSxDQUFDLFlBQVksQ0FBQyxZQUFZLENBQUM7UUFDcEQsa0JBQWtCLEVBQUUsS0FBSyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO1FBQ3hDLFVBQVUsRUFBRSxLQUFLLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUM7UUFDakMsc0JBQXNCLEVBQUUsS0FBSyxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDO1FBQzdDLGVBQWUsRUFBRSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEtBQUssQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBQy9ELG1CQUFtQixFQUFFLEtBQUssQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQztLQUMzQyxDQUFDLENBQUM7QUFDTCxDQUFDLENBQUM7QUFFVyxRQUFBLFFBQVEsR0FBRyxDQUN0QixRQUFtQixFQUNuQixrQkFBdUMsRUFDdkMsS0FBSyxHQUFHLEtBQUssQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFDeEIsRUFBRTtJQUMxQixNQUFNLHFCQUFxQixHQUEyQixFQUFFLENBQUM7SUFDekQsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLEtBQUssRUFBRSxDQUFDLEVBQUUsRUFBRTtRQUM5QixNQUFNLGlCQUFpQixHQUFHLEtBQUssQ0FBQyxNQUFNLENBQUMsWUFBWSxDQUFDLGtCQUFrQixDQUFDLENBQUM7UUFDeEUsTUFBTSxLQUFLLEdBQUcsS0FBSyxDQUFDLE1BQU0sQ0FBQyxZQUFZLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDbEQscUJBQXFCLENBQUMsSUFBSSxDQUFDLGVBQU8sQ0FBQyxLQUFLLEVBQUUsaUJBQWlCLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQztLQUNsRTtJQUNELE9BQU8scUJBQXFCLENBQUM7QUFDL0IsQ0FBQyxDQUFDIn0=