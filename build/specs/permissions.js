"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const protractor_1 = require("protractor");
const expectHelper_1 = require("../utils/expectHelper");
const groups_Po_1 = require("../pageObjects/groups.Po");
const surfaces_Po_1 = require("../pageObjects/surfaces.Po");
const permissions_Po_1 = require("../pageObjects/permissions.Po");
const assetManager_Po_1 = require("../pageObjects/assetManager.Po");
const login_Po_1 = require("../pageObjects/login.Po");
const attributeTags_Po_1 = require("../pageObjects/attributeTags.Po");
describe('Verifying Permissions Concourse ', function () {
    return __awaiter(this, void 0, void 0, function* () {
        let originalTimeout;
        let EC = protractor_1.ExpectedConditions;
        let group = new groups_Po_1.Group();
        let surface = new surfaces_Po_1.Surface();
        let attributeTag = new attributeTags_Po_1.AttributeTag();
        let loginPage = new login_Po_1.LoginPage();
        let assetsManager = new assetManager_Po_1.AssetManager();
        let verifyUserPermissions = new permissions_Po_1.VerifyUserPermissions();
        let properties = require('../conf/properties');
        let surfaceName = properties.SurfaceData.surfaceName;
        // let groupName = properties.groupData.groupName + group.getRandomNum(1, 1000);
        let groupName = 'User Permissions';
        let e2eTestUser = properties.UserPermissionData.e2eTestUser;
        let password = properties.UserPermissionData.password;
        let username = properties.loginData.username;
        let module1 = properties.UserPermissionData.module1;
        let module2 = properties.UserPermissionData.module2;
        let module3 = properties.UserPermissionData.module3;
        let module4 = properties.UserPermissionData.module4;
        let module5 = properties.UserPermissionData.module5;
        let module6 = properties.UserPermissionData.module6;
        let module7 = properties.UserPermissionData.module7;
        let module8 = properties.UserPermissionData.module8;
        let role1 = ['Business Author'];
        let responsibilities1 = ['Manage Attribute Tags', 'Manage Models', 'Manage Baselines', 'View Reports'];
        let organization = ['Default Surface - Root Surface Layer'];
        let role2 = ['Control Author'];
        let responsibilities2 = ['Manage Policy Group Templates', 'Manage Policy Groups', 'View Reports'];
        let role3 = ['Business Operator'];
        let responsibilities3 = ['Manage Deployments', 'View Reports'];
        let role4 = ['Institution Admin'];
        let responsibilities4 = ['Manage Institutions', 'Manage Surfaces', 'Manage Cloud Roles'];
        let role5 = ['Identity Admin'];
        let responsibilities5 = ['Manage Groups', 'Manage Users', 'View Reports'];
        let AttributeTagName = 'User Permissions';
        let AssetName = 'User Permissions';
        let PolicyGroupTemplateName = 'User Permissions';
        let PolicyGroupName = 'User Permissions';
        let GroupName = 'User Permissions';
        beforeEach(function () {
            originalTimeout = jasmine.DEFAULT_TIMEOUT_INTERVAL;
            jasmine.DEFAULT_TIMEOUT_INTERVAL = 400000;
        });
        it('Step 1: Verify Business Author Permissions For User1', function () {
            return __awaiter(this, void 0, void 0, function* () {
                // await group.addRoleToGroup(surfaceName, GroupName, role1, responsibilities1, organization);
                yield group.addRoleToGroup(surfaceName, groupName, role1, responsibilities1, organization);
                yield protractor_1.browser.sleep(2000);
                yield group.reLogin(username, e2eTestUser, password);
                yield verifyUserPermissions.VerifyPermissionGranted(module1, AssetName);
                yield expectHelper_1.ExpectHelper.expectExists(verifyUserPermissions.buttonEdit);
                yield console.log('User1 Has Edit Asset Permission');
                yield expectHelper_1.ExpectHelper.expectExists(verifyUserPermissions.buttonDelete);
                yield console.log('User1 Has Delete Asset Permission');
                yield verifyUserPermissions.VerifyPermissionGranted(module2, AttributeTagName);
                yield expectHelper_1.ExpectHelper.isListElementExists(protractor_1.element(protractor_1.by.css('#page-actions-container')), 'NEW ATTRIBUTE TAG');
                yield console.log('User1 Has Create New Attribute Tag Permission');
                yield expectHelper_1.ExpectHelper.expectExists(verifyUserPermissions.buttonEdit);
                yield console.log('User1 Has Edit Attribute Tag Permission');
                yield expectHelper_1.ExpectHelper.expectExists(verifyUserPermissions.buttonDelete);
                yield console.log('User1 Has Delete Attribute Tag Permission');
                yield verifyUserPermissions.VerifyPermissionNotGranted(module3);
                yield expectHelper_1.ExpectHelper.expectDoesNotExists(verifyUserPermissions.createButton('NEW POLICY GROUP TEMPLATE'));
                yield console.log('User1 Does Not Have Permission For POLICY GROUP TEMPLATES');
                yield verifyUserPermissions.VerifyPermissionNotGranted(module4);
                yield expectHelper_1.ExpectHelper.expectDoesNotExists(verifyUserPermissions.createButton('NEW POLICY GROUP'));
                yield console.log('User1 Does Not Have Permission For POLICY GROUPS');
                yield verifyUserPermissions.VerifyPermissionNotGranted(module5);
                yield expectHelper_1.ExpectHelper.expectDoesNotExists(verifyUserPermissions.createButton('NEW SURFACE'));
                yield console.log('User1 Does Not Have Permission For SURFACES');
                yield verifyUserPermissions.VerifyPermissionNotGranted(module6);
                yield expectHelper_1.ExpectHelper.expectDoesNotExists(verifyUserPermissions.createButton('NEW INSTITUTION DATA'));
                yield console.log('User1 Does Not Have Permission For INSTITUTION DATA');
                yield verifyUserPermissions.VerifyPermissionNotGranted(module7);
                yield expectHelper_1.ExpectHelper.expectDoesNotExists(verifyUserPermissions.createButton('NEW GROUP'));
                yield console.log('User1 Does Not Have Permission For GROUPS');
                yield group.reLogin(e2eTestUser, username, password);
                yield group.removeRolesFromGroup(surfaceName, GroupName, role1);
            });
        });
        it('Step 2: Verify Control Author Permissions For User2', function () {
            return __awaiter(this, void 0, void 0, function* () {
                yield group.addRoleToGroup(surfaceName, GroupName, role2, responsibilities2, organization);
                yield group.reLogin(username, e2eTestUser, password);
                yield protractor_1.browser.sleep(2000);
                yield verifyUserPermissions.VerifyPermissionGranted(module3, PolicyGroupTemplateName);
                yield expectHelper_1.ExpectHelper.isListElementExists(protractor_1.element(protractor_1.by.css('#page-actions-container')), 'NEW POLICY GROUP TEMPLATE');
                yield console.log('User2 Has Create New Policy Group Template Permission');
                yield expectHelper_1.ExpectHelper.expectExists(verifyUserPermissions.buttonEdit);
                yield console.log('User2 Has Edit Policy Group Template Permission');
                yield expectHelper_1.ExpectHelper.expectExists(verifyUserPermissions.buttonDelete);
                yield console.log('User2 Has Delete Policy Group Template Permission');
                yield verifyUserPermissions.VerifyPermissionGranted(module4, PolicyGroupName);
                yield expectHelper_1.ExpectHelper.isListElementExists(protractor_1.element(protractor_1.by.css('#page-actions-container')), 'NEW POLICY GROUP');
                yield console.log('User2 Has Create New Policy Group Permission');
                yield expectHelper_1.ExpectHelper.expectExists(verifyUserPermissions.buttonEdit);
                yield console.log('User2 Has Edit Policy Group Permission');
                yield expectHelper_1.ExpectHelper.expectExists(verifyUserPermissions.buttonDelete);
                yield console.log('User2 Has Delete Policy Group Permission');
                yield verifyUserPermissions.VerifyPermissionNotGranted(module2);
                yield expectHelper_1.ExpectHelper.expectDoesNotExists(verifyUserPermissions.createButton('NEW ATTRIBUTE TAG'));
                yield console.log('User2 Does Not Have Permission For ATTRIBUTE TAGS');
                yield verifyUserPermissions.VerifyPermissionNotGranted(module1);
                yield expectHelper_1.ExpectHelper.expectDoesNotExists(verifyUserPermissions.createButton('NEW ASSET'));
                yield console.log('User2 Does Not Have Permission For ASSETS');
                yield verifyUserPermissions.VerifyPermissionNotGranted(module5);
                yield expectHelper_1.ExpectHelper.expectDoesNotExists(verifyUserPermissions.createButton('NEW SURFACE'));
                yield console.log('User2 Does Not Have Permission For SURFACES');
                yield verifyUserPermissions.VerifyPermissionNotGranted(module6);
                yield expectHelper_1.ExpectHelper.expectDoesNotExists(verifyUserPermissions.createButton('NEW INSTITUTION DATA'));
                yield console.log('User2 Does Not Have Permission For INSTITUTION DATA');
                yield verifyUserPermissions.VerifyPermissionNotGranted(module7);
                yield expectHelper_1.ExpectHelper.expectDoesNotExists(verifyUserPermissions.createButton('NEW GROUP'));
                yield console.log('User2 Does Not Have Permission For GROUPS');
                yield group.reLogin(e2eTestUser, username, password);
                yield group.removeRolesFromGroup(surfaceName, GroupName, role2);
            });
        });
        it('Step 3: Verify Business Operator Permissions For User3', function () {
            return __awaiter(this, void 0, void 0, function* () {
                yield group.addRoleToGroup(surfaceName, GroupName, role3, responsibilities3);
                yield group.reLogin(username, e2eTestUser, password);
                yield protractor_1.browser.sleep(2000);
                yield verifyUserPermissions.VerifyPermissionGranted(module1, AssetName);
                yield console.log('User3 Has Deployment Permission');
                yield verifyUserPermissions.VerifyPermissionNotGranted(module2);
                yield expectHelper_1.ExpectHelper.expectDoesNotExists(verifyUserPermissions.createButton('NEW ATTRIBUTE TAG'));
                yield console.log('User3 Does Not Have Permission For ATTRIBUTE TAGS');
                yield verifyUserPermissions.VerifyPermissionNotGranted(module1);
                yield expectHelper_1.ExpectHelper.expectDoesNotExists(verifyUserPermissions.createButton('NEW ASSET'));
                yield console.log('User3 Does Not Have Permission For ASSETS');
                yield verifyUserPermissions.VerifyPermissionNotGranted(module5);
                yield expectHelper_1.ExpectHelper.expectDoesNotExists(verifyUserPermissions.createButton('NEW SURFACE'));
                yield console.log('User3 Does Not Have Permission For SURFACES');
                yield verifyUserPermissions.VerifyPermissionNotGranted(module6);
                yield expectHelper_1.ExpectHelper.expectDoesNotExists(verifyUserPermissions.createButton('NEW INSTITUTION DATA'));
                yield console.log('User3 Does Not Have Permission For INSTITUTION DATA');
                yield verifyUserPermissions.VerifyPermissionNotGranted(module7);
                yield expectHelper_1.ExpectHelper.expectDoesNotExists(verifyUserPermissions.createButton('NEW GROUP'));
                yield console.log('User3 Does Not Have Permission For GROUPS');
                yield verifyUserPermissions.VerifyPermissionNotGranted(module3);
                yield expectHelper_1.ExpectHelper.expectDoesNotExists(verifyUserPermissions.createButton('NEW POLICY GROUP TEMPLATE'));
                yield console.log('User3 Does Not Have Permission For POLICY GROUP TEMPLATES');
                yield verifyUserPermissions.VerifyPermissionNotGranted(module4);
                yield expectHelper_1.ExpectHelper.expectDoesNotExists(verifyUserPermissions.createButton('NEW POLICY GROUP'));
                yield console.log('User3 Does Not Have Permission For POLICY GROUPS');
                yield group.reLogin(e2eTestUser, username, password);
                yield group.removeRolesFromGroup(surfaceName, GroupName, role3);
            });
        });
        it('Step 4: Verify Institution Admin Permissions For User4', function () {
            return __awaiter(this, void 0, void 0, function* () {
                yield group.addRoleToGroup(surfaceName, GroupName, role4, responsibilities4);
                yield group.reLogin(username, e2eTestUser, password);
                yield protractor_1.browser.sleep(2000);
                yield verifyUserPermissions.VerifyPermissionGranted(module5, 'surfaceName');
                yield expectHelper_1.ExpectHelper.isListElementExists(protractor_1.element(protractor_1.by.css('#page-actions-container')), 'NEW SURFACE');
                yield console.log('User4 Has Create New Surface Permission');
                yield verifyUserPermissions.VerifyPermissionGranted(module6, 'institutions');
                yield expectHelper_1.ExpectHelper.isListElementExists(protractor_1.element(protractor_1.by.css('#page-actions-container')), 'NEW INSTITUTION DATA');
                yield console.log('User4 Has Create New Institution Permission');
                yield verifyUserPermissions.VerifyPermissionNotGranted(module1);
                yield expectHelper_1.ExpectHelper.expectDoesNotExists(verifyUserPermissions.createButton('NEW ASSET'));
                yield console.log('User4 Does Not Have Permission For ASSETS');
                yield verifyUserPermissions.VerifyPermissionNotGranted(module3);
                yield expectHelper_1.ExpectHelper.expectDoesNotExists(verifyUserPermissions.createButton('NEW POLICY GROUP TEMPLATE'));
                yield console.log('User4 Does Not Have Permission For POLICY GROUP TEMPLATES');
                yield verifyUserPermissions.VerifyPermissionNotGranted(module4);
                yield expectHelper_1.ExpectHelper.expectDoesNotExists(verifyUserPermissions.createButton('NEW POLICY GROUP'));
                yield console.log('User4 Does Not Have Permission For POLICY GROUPS');
                yield verifyUserPermissions.VerifyPermissionNotGranted(module7);
                yield expectHelper_1.ExpectHelper.expectDoesNotExists(verifyUserPermissions.createButton('NEW GROUP'));
                yield console.log('User4 Does Not Have Permission For GROUPS');
                yield verifyUserPermissions.VerifyPermissionNotGranted(module2);
                yield expectHelper_1.ExpectHelper.expectDoesNotExists(verifyUserPermissions.createButton('NEW ATTRIBUTE TAG'));
                yield console.log('User4 Does Not Have Permission For ATTRIBUTE TAGS');
                yield group.reLogin(e2eTestUser, username, password);
                yield group.removeRolesFromGroup(surfaceName, GroupName, role4);
            });
        });
        it('Step 5: Verify Identity Admin Permissions For User5', function () {
            return __awaiter(this, void 0, void 0, function* () {
                yield group.addRoleToGroup(surfaceName, GroupName, role5, responsibilities5, organization);
                yield group.reLogin(username, e2eTestUser, password);
                yield protractor_1.browser.sleep(2000);
                yield verifyUserPermissions.VerifyPermissionGranted(module7, GroupName);
                yield expectHelper_1.ExpectHelper.isListElementExists(protractor_1.element(protractor_1.by.css('#page-actions-container')), 'NEW GROUP');
                yield console.log('User5 Has Create New Group Permission');
                yield expectHelper_1.ExpectHelper.expectExists(verifyUserPermissions.buttonEdit);
                yield console.log('User5 Has Edit Group Permission');
                yield expectHelper_1.ExpectHelper.expectExists(verifyUserPermissions.buttonDelete);
                yield console.log('User5 Has Delete Group Permission');
                yield verifyUserPermissions.VerifyPermissionGranted(module8, 'users');
                yield expectHelper_1.ExpectHelper.isListElementExists(protractor_1.element(protractor_1.by.css('#page-actions-container')), 'INVITE USER');
                yield console.log('User5 Has Permission To INVITE USER');
                yield verifyUserPermissions.VerifyPermissionNotGranted(module4);
                yield expectHelper_1.ExpectHelper.expectDoesNotExists(verifyUserPermissions.createButton('NEW POLICY GROUP'));
                yield console.log('User5 Does Not Have Permission For POLICY GROUPS');
                yield verifyUserPermissions.VerifyPermissionNotGranted(module1);
                yield expectHelper_1.ExpectHelper.expectDoesNotExists(verifyUserPermissions.createButton('NEW ATTRIBUTE TAG'));
                yield console.log('User5 Does Not Have Permission For ATTRIBUTE TAGS');
                yield verifyUserPermissions.VerifyPermissionNotGranted(module1);
                yield expectHelper_1.ExpectHelper.expectDoesNotExists(verifyUserPermissions.createButton('NEW ASSET'));
                yield console.log('User5 Does Not Have Permission For ASSETS');
                yield verifyUserPermissions.VerifyPermissionNotGranted(module3);
                yield expectHelper_1.ExpectHelper.expectDoesNotExists(verifyUserPermissions.createButton('NEW POLICY GROUP TEMPLATE'));
                yield console.log('User5 Does Not Have Permission For POLICY GROUP TEMPLATES');
                yield verifyUserPermissions.VerifyPermissionNotGranted(module5);
                yield expectHelper_1.ExpectHelper.expectDoesNotExists(verifyUserPermissions.createButton('NEW SURFACE'));
                yield console.log('User5 Does Not Have Permission For SURFACES');
                yield verifyUserPermissions.VerifyPermissionNotGranted(module6);
                yield expectHelper_1.ExpectHelper.expectDoesNotExists(verifyUserPermissions.createButton('NEW INSTITUTION DATA'));
                yield console.log('User5 Does Not Have Permission For INSTITUTION DATA');
                yield group.reLogin(e2eTestUser, username, password);
                yield group.removeRolesFromGroup(surfaceName, GroupName, role5);
            });
        });
        afterEach(function () {
            jasmine.DEFAULT_TIMEOUT_INTERVAL = originalTimeout;
        });
    });
});
//# sourceMappingURL=data:application/json;base64,